@using HttpClients.ClientInterfaces
@inject ITaskApprovalService taskApprovalService
@inject AuthenticationStateProvider AuthenticationStateProvider



<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Employee Allocation</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

          <div class="nav-item px-3">
                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href=" ">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Add user
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href=" ">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Add project tag
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="  ">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Add department
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="viewUserSkills">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Skills
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="viewProjects">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Projects
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="viewUserTasks">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Tasks
                                </NavLink>
                            </div>
                            <div class="nav-item px-3">
                                <NavLink class="nav-link" href="viewDepartmentUsers">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Team Tasks
                                </NavLink>
                            </div>

                        </Authorized>
                    </AuthorizeView>
                </div>
          
        <div class="nav-item px-3">
            <AuthorizeView Roles="Employee">
                <Authorized>
                       <div class="nav-item px-3">
                               <NavLink class="nav-link" href="viewUserSkills">
                                   <span class="oi oi-list-rich" aria-hidden="true"></span> Skills
                               </NavLink>
                           </div>
                     <div class="nav-item px-3">
                                <NavLink class="nav-link" href="viewUserTasks">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Tasks 
                                </NavLink>
                            </div>
                </Authorized>
            </AuthorizeView>
        </div>
        
          <div class="nav-item px-3">
                    <AuthorizeView Roles="Project Manager">
                        <Authorized>
                                   <div class="nav-item px-3">
                                       <NavLink class="nav-link" href="viewUserSkills">
                                           <span class="oi oi-list-rich" aria-hidden="true"></span> Skills
                                           </NavLink>
                                       </div>
                                   <div class="nav-item px-3">
                                       <NavLink class="nav-link" href="viewProjects">
                                           <span class="oi oi-list-rich" aria-hidden="true"></span> Projects
                                       </NavLink>
                                   </div>
                        </Authorized>
                    </AuthorizeView>
                </div>
        
        
        
        <div class="nav-item px-3">
            <AuthorizeView Roles="Manager">
                <Authorized>
                       <div class="nav-item px-3">
                               <NavLink class="nav-link" href="viewUserSkills">
                                   <span class="oi oi-list-rich" aria-hidden="true"></span> Skills
                               </NavLink>
                           </div>
                           @* <div class="nav-item px-3"> *@
                           @*     <NavLink class="nav-link" href="viewProjects"> *@
                           @*         <span class="oi oi-list-rich" aria-hidden="true"></span> Projects *@
                           @*     </NavLink> *@
                           @* </div> *@
                           <div class="nav-item px-3">
                               <NavLink class="nav-link" href="viewDepartmentUsers">
                                   <span class="oi oi-list-rich" aria-hidden="true"></span> Team Tasks
                               </NavLink>
                           </div>
                           
                           <div>
                               
                                   @if (isUserManager)
                                   {
                                       <NavLink class="@($"nav-link {notificationClass}")" href="viewApprovals">
                                           <span class="oi oi-list-rich" aria-hidden="true"></span>
                                           Task Approvals
                                           @(PendingApprovals > 0 ? $" ({PendingApprovals})" : "")
                                       </NavLink>
                                   }
                           </div>
                           
                </Authorized>
            </AuthorizeView>
        </div>
    </nav>
</div>
      @code {
          [CascadingParameter]
          public Task<AuthenticationState> AuthState { get; set; } = null!;
      
          private bool collapseNavMenu = true;
          private bool isUserManager = false; // Variable to check if user is a Manager
          private int PendingApprovals = 0;
          private string notificationClass = string.Empty;
      
          private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
      
          private void ToggleNavMenu()
          {
              collapseNavMenu = !collapseNavMenu;
          }
      
          
          
          // We can call RefreshPendingApprovals from OnAfterRenderAsync
          // to ensure the method is called after the component has been rendered
          protected override async Task OnAfterRenderAsync(bool firstRender)
          {
              if (!firstRender)
              {
                  try
                  {
                      var authState = await AuthState;
                      var user = authState.User;

          // Ensure the user is authenticated and has the "Manager" role
                      if (user.Identity?.IsAuthenticated == true && user.IsInRole("Manager"))
                      {
                          isUserManager = true; // The user is a manager
                          await RefreshPendingApprovals();
                          StateHasChanged(); // Trigger re-render 
                      }
                      else
                      {
                          isUserManager = false;
                      }
                      
                  }
                  catch (Exception ex)
                  {
          // Handle any errors that might occur (e.g., network issues, null references)
                      Console.Error.WriteLine($"Error: {ex.Message}");

          // Set the isUserManager flag to false in case of an error
                      isUserManager = false;
                  }
                
              }
          }
      
          
          
          // This method fetches the pending approval count
          private async Task RefreshPendingApprovals()
          {
              try
              {
                  var authState = await AuthState;
                  var user = authState.User;
      
                  if (!user.Identity?.IsAuthenticated ?? true)
                  {
                      Console.Error.WriteLine("User not authenticated.");
                      return;
                  }
      
                  string username = user.Identity.Name ?? throw new Exception("User has no name.");
                  PendingApprovals = await taskApprovalService.GetPendingApprovalAsync(username);
      
                  notificationClass = PendingApprovals > 0 ? "has-notification" : string.Empty;
              }
              catch (Exception e)
              {
                  Console.Error.WriteLine($"Error fetching pending approvals: {e.Message}");
                  PendingApprovals = 0;
                  notificationClass = string.Empty;
              }
          }
      }

